# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-04-16 04:01
from __future__ import unicode_literals

import HdWxShop.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='advinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Advimg', models.ImageField(upload_to=HdWxShop.models.upload_advimg)),
                ('Advtitle', models.CharField(max_length=255)),
                ('AdvCreatetime', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '广告信息',
                'verbose_name_plural': '广告信息',
            },
        ),
        migrations.CreateModel(
            name='commditydetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CodUnit', models.CharField(blank=True, max_length=50, null=True, verbose_name='单位')),
                ('Codthick', models.CharField(blank=True, max_length=15, null=True, verbose_name='厚度')),
                ('CodSize', models.CharField(blank=True, max_length=30, null=True, verbose_name='尺寸')),
                ('Cod_Protlevel', models.CharField(blank=True, max_length=5, null=True, verbose_name='环保等级')),
                ('CodunPrice', models.FloatField(verbose_name='单价')),
                ('Codinventory', models.IntegerField(blank=True, default=0, null=True, verbose_name='库存')),
                ('CodUnmun', models.IntegerField(blank=True, null=True, verbose_name='每件数量')),
            ],
        ),
        migrations.CreateModel(
            name='commodityclass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CclassName', models.CharField(max_length=50, unique=True, verbose_name='商品类别')),
            ],
            options={
                'verbose_name': '商品类别',
                'verbose_name_plural': '商品类别',
            },
        ),
        migrations.CreateModel(
            name='commodityendinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CeiViewNum', models.BigIntegerField(default=0, verbose_name='浏览次数')),
                ('CeiBuyNUm', models.BigIntegerField(default=0, verbose_name='销量')),
            ],
        ),
        migrations.CreateModel(
            name='commodityinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CommName', models.CharField(max_length=100, unique=True, verbose_name='商品名称')),
                ('Commimg', models.ImageField(blank=True, upload_to=HdWxShop.models.upload_commodityimg)),
                ('CommInfo', models.ImageField(blank=True, upload_to=HdWxShop.models.upload_commodityinfo)),
                ('CreateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '商品信息',
                'verbose_name_plural': '商品信息',
            },
        ),
        migrations.CreateModel(
            name='custcollect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CollectDate', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='custcommprice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CpunPrice', models.FloatField(verbose_name='单价')),
            ],
            options={
                'verbose_name': '客户单价表 ',
                'verbose_name_plural': '客户单价表',
            },
        ),
        migrations.CreateModel(
            name='custsalebind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Binddate', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='newsclass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nclassname', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': '新闻种类',
                'verbose_name_plural': '新闻种类',
            },
        ),
        migrations.CreateModel(
            name='newsinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Newsbody', models.TextField(null=True)),
                ('Newstitle', models.CharField(max_length=255)),
                ('NewsCreatetime', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '新闻信息',
                'verbose_name_plural': '新闻信息',
            },
        ),
        migrations.CreateModel(
            name='shoppingcart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ScNum', models.IntegerField()),
                ('ScunPrice', models.FloatField()),
                ('ScSum', models.FloatField()),
                ('ScAddDate', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '购物车',
                'verbose_name_plural': '购物车',
            },
        ),
        migrations.CreateModel(
            name='shoppingendflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sefusername', models.CharField(max_length=50, verbose_name='用户名')),
                ('sefcarryprice', models.FloatField(verbose_name='运费')),
                ('sefmark', models.TextField(verbose_name='备注')),
                ('sefaddress', models.CharField(max_length=255, null=True, verbose_name='地址')),
                ('sefcreatetime', models.DateTimeField(verbose_name='创建时间')),
                ('SefFinishtime', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='shoppingendflowproduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SefClass', models.CharField(max_length=50)),
                ('SefName', models.CharField(max_length=100)),
                ('SefunPrice', models.FloatField()),
                ('SefNum', models.IntegerField()),
                ('SefPrice', models.FloatField()),
                ('sefUnit', models.CharField(blank=True, max_length=50, null=True, verbose_name='单位')),
                ('sefthick', models.CharField(blank=True, max_length=15, null=True, verbose_name='厚度')),
                ('sefSize', models.CharField(blank=True, max_length=30, null=True, verbose_name='尺寸')),
                ('sef_Protlevel', models.CharField(blank=True, max_length=5, null=True, verbose_name='环保等级')),
                ('SefUnmun', models.IntegerField(blank=True, null=True, verbose_name='每件数量')),
            ],
        ),
        migrations.CreateModel(
            name='shoppingflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sfstatus', models.IntegerField(choices=[(1, '有意向'), (2, '价格待审核'), (3, '客户待确认'), (4, '待付款'), (5, '待出货'), (6, '待收货'), (7, '已完成')], verbose_name='订单状态')),
                ('SfCarryPrice', models.FloatField(default=0)),
                ('SfisCarryPrice', models.BooleanField(default=False)),
                ('SfCreatetime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('SfRemark', models.TextField(blank=True)),
                ('SfModtime', models.DateTimeField(auto_now=True)),
                ('SfAddress', models.CharField(max_length=255, null=True, verbose_name='地址')),
            ],
        ),
        migrations.CreateModel(
            name='shoppingflowproduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sfpnum', models.IntegerField(verbose_name='数量')),
                ('sfpsumprice', models.FloatField(verbose_name='价格')),
                ('sfpUnit', models.CharField(blank=True, max_length=50, null=True, verbose_name='单位')),
                ('sfpthick', models.CharField(blank=True, max_length=15, null=True, verbose_name='厚度')),
                ('sfpSize', models.CharField(blank=True, max_length=30, null=True, verbose_name='尺寸')),
                ('sfp_Protlevel', models.CharField(blank=True, max_length=5, null=True, verbose_name='环保等级')),
                ('sfpunPrice', models.FloatField(verbose_name='单价')),
                ('sfpUnmun', models.IntegerField(blank=True, null=True, verbose_name='每件数量')),
            ],
        ),
        migrations.CreateModel(
            name='userbind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Userphone', models.CharField(max_length=30, null=True, verbose_name='手机号码')),
                ('Userwx', models.CharField(max_length=50, null=True, verbose_name='微信号')),
                ('UserAddress', models.CharField(max_length=255, null=True, verbose_name='地址')),
            ],
        ),
        migrations.CreateModel(
            name='usermessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='标题')),
                ('message', models.TextField(blank=True, verbose_name='消息内容')),
                ('isread', models.BooleanField(verbose_name='是否已读')),
            ],
        ),
        migrations.CreateModel(
            name='userrole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Rolename', models.CharField(max_length=50)),
                ('ReleaseAdv', models.BooleanField()),
                ('ReleaseNew', models.BooleanField()),
                ('ReleaseInfo', models.BooleanField()),
                ('AddCommodity', models.BooleanField()),
                ('ModCommodity', models.BooleanField()),
                ('AddOrder', models.BooleanField()),
                ('ModOrder', models.BooleanField()),
                ('ModOrderPrice', models.BooleanField()),
                ('AppOrder', models.BooleanField()),
                ('AckOrder', models.BooleanField()),
                ('PaidOrder', models.BooleanField()),
                ('ShipOrder', models.BooleanField()),
                ('RecOrder', models.BooleanField()),
                ('TranInfo', models.BooleanField()),
                ('SalePer', models.BooleanField()),
                ('ProSummary', models.BooleanField()),
                ('ModRule', models.BooleanField()),
            ],
            options={
                'verbose_name': '角色权限',
                'verbose_name_plural': '角色权限',
            },
        ),
        migrations.CreateModel(
            name='userrule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReleaseAdv', models.BooleanField(verbose_name='发布广告')),
                ('ReleaseNew', models.BooleanField(verbose_name='发布新闻')),
                ('ReleaseInfo', models.BooleanField(verbose_name='重要信息发布')),
                ('AddCommodity', models.BooleanField(verbose_name='添加商品')),
                ('ModCommodity', models.BooleanField(verbose_name='修改商品')),
                ('AddOrder', models.BooleanField(verbose_name='添加订单')),
                ('ModOrder', models.BooleanField(verbose_name='修改订单信息')),
                ('ModOrderPrice', models.BooleanField(verbose_name='修改订单价格')),
                ('AppOrder', models.BooleanField(verbose_name='订单审批')),
                ('AckOrder', models.BooleanField(verbose_name='订单确认')),
                ('PaidOrder', models.BooleanField(verbose_name='订单已付款')),
                ('ShipOrder', models.BooleanField(verbose_name='订单出货')),
                ('RecOrder', models.BooleanField(verbose_name='确认收货')),
                ('TranInfo', models.BooleanField(verbose_name='导出历史交易信息')),
                ('SalePer', models.BooleanField(verbose_name='导出销售人员业绩')),
                ('ProSummary', models.BooleanField(verbose_name='导出产品汇总表')),
                ('ModRule', models.BooleanField(verbose_name='修改用户权限')),
            ],
            options={
                'verbose_name': '用户权限',
                'verbose_name_plural': '用户权限',
            },
        ),
        migrations.CreateModel(
            name='webdata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Datatime', models.DateTimeField(auto_now_add=True)),
                ('DataClassid', models.IntegerField()),
                ('DataText', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='webuser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Username', models.CharField(max_length=100, unique=True, verbose_name='用户名')),
                ('Userstatus', models.IntegerField(choices=[(0, '异常'), (1, '正常'), (2, '冻结')], default=1, verbose_name='状态')),
                ('Createtime', models.DateTimeField(auto_now=True)),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
        ),
        migrations.AddIndex(
            model_name='webdata',
            index=models.Index(fields=['Datatime', 'DataClassid'], name='HdWxShop_we_Datatim_aa218b_idx'),
        ),
        migrations.AddField(
            model_name='userrule',
            name='Roleid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.userrole'),
        ),
        migrations.AddField(
            model_name='userrule',
            name='Userid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.webuser'),
        ),
        migrations.AddField(
            model_name='usermessage',
            name='userid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.webuser', verbose_name='用户名'),
        ),
        migrations.AddField(
            model_name='userbind',
            name='userid',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.webuser'),
        ),
        migrations.AddField(
            model_name='shoppingflowproduct',
            name='shoppingdetailid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.commditydetail'),
        ),
        migrations.AddField(
            model_name='shoppingflowproduct',
            name='shoppingflowid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.shoppingflow', verbose_name='订单号'),
        ),
        migrations.AddField(
            model_name='shoppingflowproduct',
            name='shoppinginfoid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.commodityinfo'),
        ),
        migrations.AddField(
            model_name='shoppingflow',
            name='SfUserid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.webuser', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='shoppingendflowproduct',
            name='sefdetailid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.commditydetail', verbose_name='规格id'),
        ),
        migrations.AddField(
            model_name='shoppingendflowproduct',
            name='sefproductid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.commodityinfo', verbose_name='商品id'),
        ),
        migrations.AddField(
            model_name='shoppingendflowproduct',
            name='shoppingendflowid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.shoppingendflow'),
        ),
        migrations.AddField(
            model_name='shoppingendflow',
            name='Sefflowid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.shoppingflow', verbose_name='订单号'),
        ),
        migrations.AddField(
            model_name='shoppingendflow',
            name='sefsaleid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shoppingflow_webuser_custid', to='HdWxShop.webuser', verbose_name='销售人员'),
        ),
        migrations.AddField(
            model_name='shoppingendflow',
            name='sefuserid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shoppingflow_webuser_userid', to='HdWxShop.webuser', verbose_name='用户ID'),
        ),
        migrations.AddField(
            model_name='shoppingcart',
            name='ScCollectid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.commditydetail'),
        ),
        migrations.AddField(
            model_name='shoppingcart',
            name='ScUserid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.webuser'),
        ),
        migrations.AddField(
            model_name='newsinfo',
            name='Newsclassid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.newsclass'),
        ),
        migrations.AddField(
            model_name='custsalebind',
            name='Customerid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Customerid_Webuser', to='HdWxShop.webuser', verbose_name='顾客'),
        ),
        migrations.AddField(
            model_name='custsalebind',
            name='Saleid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Saleid_Webuser', to='HdWxShop.webuser', verbose_name='销售人员'),
        ),
        migrations.AddField(
            model_name='custcommprice',
            name='Cpcommid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.commditydetail', verbose_name='商品及规格'),
        ),
        migrations.AddField(
            model_name='custcommprice',
            name='Cpuserid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.webuser', verbose_name='用户名'),
        ),
        migrations.AddField(
            model_name='custcollect',
            name='CcCommid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.commditydetail'),
        ),
        migrations.AddField(
            model_name='custcollect',
            name='CcUserid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.webuser'),
        ),
        migrations.AddField(
            model_name='commodityinfo',
            name='Commclass',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.commodityclass'),
        ),
        migrations.AddField(
            model_name='commodityendinfo',
            name='Commid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.commodityinfo', verbose_name='商品名称'),
        ),
        migrations.AddField(
            model_name='commditydetail',
            name='Commid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.commodityinfo'),
        ),
        migrations.AddField(
            model_name='advinfo',
            name='Advcommid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HdWxShop.commodityinfo'),
        ),
        migrations.AddIndex(
            model_name='webuser',
            index=models.Index(fields=['userid'], name='HdWxShop_we_userid__8f296a_idx'),
        ),
        migrations.AddIndex(
            model_name='userrule',
            index=models.Index(fields=['Userid', 'Roleid'], name='HdWxShop_us_Userid__8f5f8a_idx'),
        ),
        migrations.AddIndex(
            model_name='usermessage',
            index=models.Index(fields=['userid', 'isread'], name='HdWxShop_us_userid__86cc4a_idx'),
        ),
        migrations.AddIndex(
            model_name='userbind',
            index=models.Index(fields=['userid'], name='HdWxShop_us_userid__7af669_idx'),
        ),
        migrations.AddIndex(
            model_name='shoppingflowproduct',
            index=models.Index(fields=['shoppingflowid', 'shoppinginfoid'], name='HdWxShop_sh_shoppin_87aaa3_idx'),
        ),
        migrations.AddIndex(
            model_name='shoppingflow',
            index=models.Index(fields=['SfUserid'], name='HdWxShop_sh_SfUseri_30ff19_idx'),
        ),
        migrations.AddIndex(
            model_name='shoppingendflowproduct',
            index=models.Index(fields=['shoppingendflowid'], name='HdWxShop_sh_shoppin_88518b_idx'),
        ),
        migrations.AddIndex(
            model_name='shoppingendflow',
            index=models.Index(fields=['Sefflowid', 'sefuserid'], name='HdWxShop_sh_Sefflow_010d53_idx'),
        ),
        migrations.AddIndex(
            model_name='shoppingcart',
            index=models.Index(fields=['ScUserid', 'ScCollectid'], name='HdWxShop_sh_ScUseri_9d5861_idx'),
        ),
        migrations.AddIndex(
            model_name='newsinfo',
            index=models.Index(fields=['Newsclassid'], name='HdWxShop_ne_Newscla_73a84a_idx'),
        ),
        migrations.AddIndex(
            model_name='custsalebind',
            index=models.Index(fields=['Customerid'], name='HdWxShop_cu_Custome_88a55c_idx'),
        ),
        migrations.AddIndex(
            model_name='custcommprice',
            index=models.Index(fields=['Cpuserid', 'Cpcommid'], name='HdWxShop_cu_Cpuseri_9158da_idx'),
        ),
        migrations.AddIndex(
            model_name='custcollect',
            index=models.Index(fields=['CcUserid', 'CcCommid'], name='HdWxShop_cu_CcUseri_855caf_idx'),
        ),
        migrations.AddIndex(
            model_name='commodityinfo',
            index=models.Index(fields=['Commclass'], name='HdWxShop_co_Commcla_22905e_idx'),
        ),
        migrations.AddIndex(
            model_name='commodityendinfo',
            index=models.Index(fields=['Commid'], name='HdWxShop_co_Commid__a0aae3_idx'),
        ),
        migrations.AddIndex(
            model_name='commditydetail',
            index=models.Index(fields=['Commid'], name='HdWxShop_co_Commid__a6b48c_idx'),
        ),
    ]
